"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = RoundDiv;

var _react = _interopRequireWildcard(require("react"));

var _generator = _interopRequireDefault(require("./generator"));

require("./external/getMatchedCSSRules-polyfill");

var _updateStates = _interopRequireDefault(require("./updateStates"));

var _apearceEactShadowDom = _interopRequireDefault(require("./external/apearce:eact-shadow-dom"));

var _styleSheetWatcher = _interopRequireDefault(require("./styleSheetWatcher"));

var _maskGenerator = _interopRequireDefault(require("./mask-generator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function RoundDiv(_ref) {
  var style = _ref.style,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["style", "children"]);

  var _useState = (0, _react.useState)([0, 0]),
      _useState2 = _slicedToArray(_useState, 2),
      position = _useState2[0],
      setPosition = _useState2[1];

  var _useState3 = (0, _react.useState)(0),
      _useState4 = _slicedToArray(_useState3, 2),
      height = _useState4[0],
      setHeight = _useState4[1];

  var _useState5 = (0, _react.useState)(0),
      _useState6 = _slicedToArray(_useState5, 2),
      width = _useState6[0],
      setWidth = _useState6[1];

  var _useState7 = (0, _react.useState)(Array(4).fill(0)),
      _useState8 = _slicedToArray(_useState7, 2),
      radius = _useState8[0],
      setRadius = _useState8[1];

  var _useState9 = (0, _react.useState)(Array(4).fill('transparent')),
      _useState10 = _slicedToArray(_useState9, 2),
      borderColor = _useState10[0],
      setBorderColor = _useState10[1];

  var _useState11 = (0, _react.useState)(Array(4).fill(1)),
      _useState12 = _slicedToArray(_useState11, 2),
      borderOpacity = _useState12[0],
      setBorderOpacity = _useState12[1];

  var _useState13 = (0, _react.useState)(Array(4).fill(0)),
      _useState14 = _slicedToArray(_useState13, 2),
      borderWidth = _useState14[0],
      setBorderWidth = _useState14[1];

  var _useState15 = (0, _react.useState)('Z'),
      _useState16 = _slicedToArray(_useState15, 2),
      path = _useState16[0],
      setPath = _useState16[1];

  var _useState17 = (0, _react.useState)('Z'),
      _useState18 = _slicedToArray(_useState17, 2),
      innerPath = _useState18[0],
      setInnerPath = _useState18[1];

  var _useState19 = (0, _react.useState)('Z'),
      _useState20 = _slicedToArray(_useState19, 2),
      maskPaths = _useState20[0],
      setMaskPaths = _useState20[1];

  var div = (0, _react.useRef)();
  var updateStatesWithArgs = (0, _react.useCallback)(function () {
    return (0, _updateStates["default"])({
      div: div,
      style: style,
      setPosition: setPosition,
      setHeight: setHeight,
      setWidth: setWidth,
      setRadius: setRadius,
      setBorderColor: setBorderColor,
      setBorderWidth: setBorderWidth,
      setBorderOpacity: setBorderOpacity
    });
  }, [style]);
  (0, _react.useEffect)(updateStatesWithArgs, [style, updateStatesWithArgs]);
  (0, _react.useEffect)(function () {
    (0, _styleSheetWatcher["default"])(function () {
      return updateStatesWithArgs();
    });
  }, [updateStatesWithArgs]);
  (0, _react.useEffect)(function () {
    setPath((0, _generator["default"])(height, width, radius));
    setInnerPath((0, _generator["default"])(height - (borderWidth[0] + borderWidth[2]), width - (borderWidth[1] + borderWidth[3]), radius.map(function (val, i) {
      return Math.max(0, val - Math.max(borderWidth[i], borderWidth[i === 0 ? 3 : i - 1]));
    })).replace(/(\d+(\.\d+)?),(\d+(\.\d+)?)/g, function (match) {
      return match.split(',').map(function (number, i) {
        return Number(number) + (i === 0 ? borderWidth[3] : borderWidth[0]);
      }).join(',');
    }));

    var lazySetObjectsState = function lazySetObjectsState(setState, newState) {
      return setState(function (oldState) {
        if (areEqualObjects(oldState, newState)) return oldState;else return newState;
      });
    };

    function areEqualObjects(a, b) {
      if (Object.keys(a).length !== Object.keys(b).length) return false;

      for (var key in a) {
        if (a[key] !== b[key]) return false;
      }

      return true;
    }

    lazySetObjectsState(setMaskPaths, (0, _maskGenerator["default"])(borderWidth, height, width, radius));
  }, [height, width, radius, borderWidth]);

  var divStyle = _objectSpread(_objectSpread({}, style), {}, {
    clipPath: "path(\"".concat(path, "\")"),
    borderColor: 'transparent'
  });

  return _react["default"].createElement("div", _extends({}, props, {
    style: divStyle,
    ref: div
  }), _react["default"].createElement(_apearceEactShadowDom["default"], null, _react["default"].createElement("svg", {
    viewBox: "0 0 ".concat(width, " ").concat(height),
    style: {
      position: 'fixed',
      left: position[0],
      top: position[1],
      height: height,
      width: width,
      overflow: 'visible',
      zIndex: -1
    },
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    preserveAspectRatio: 'xMidYMid slice'
  }, _react["default"].createElement("defs", null, _react["default"].createElement("clipPath", {
    id: "inner"
  }, _react["default"].createElement("path", {
    d: "M0,0V".concat(height, "H").concat(width, "V0Z") + innerPath,
    fillRule: 'evenodd'
  }))), Object.keys(maskPaths).map(function (key, i) {
    if (borderColor[i] === borderColor[i - 1]) return '';
    var path = maskPaths[key];

    while (borderColor[i] === borderColor[i + 1]) {
      path += maskPaths[Object.keys(maskPaths)[i + 1]];
      i++;
    }

    return _react["default"].createElement("path", {
      d: path,
      clipPath: 'url(#inner)',
      key: key,
      fill: borderColor[i],
      opacity: borderOpacity[i]
    });
  })), _react["default"].createElement("slot", {
    style: {
      overflow: 'visible'
    }
  })), children);
}