"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = getMaskPaths;

function getMaskPaths(borderWidth, height, width, radius) {
  var allSides = ['top', 'right', 'bottom', 'left'];
  var max = allSides.length - 1;

  var next = function next(i) {
    return i === max ? 0 : i + 1;
  };

  var prev = function prev(i) {
    return i === 0 ? max : i - 1;
  };

  var allRatios = allSides.map(function (side, i) {
    return ((i % 2 === 0 ? height : width) - Math.max(borderWidth[next(next(i))], radius[prev(i)], radius[prev(prev(i))])) / borderWidth[i];
  });

  var makePoint = function makePoint(posY, posX, inside, borderPos) {
    return makeValue(posX, inside, borderPos) + ',' + makeValue(posY, inside, borderPos);
  };

  var makeValue = function makeValue(pos, inside, borderPos) {
    var v = -borderWidth[allSides.indexOf(pos)];

    if (inside) {
      var i = allSides.indexOf(borderPos);
      v *= -Math.min(allRatios[prev(i)], allRatios[i], allRatios[next(i)]);
    }

    if (pos === 'right') v = -v + Number(width);else if (pos === 'bottom') v = -v + Number(height);
    return v;
  };

  var makeMaskPath = function makeMaskPath(side) {
    var i = allSides.indexOf(side);
    var isH = i % 2 === 0;
    var T = isH ? 'H' : 'V';
    var nextSide = allSides[next(i)];
    var prevSide = allSides[prev(i)];
    var prevIfH = isH ? prevSide : side;
    var prevIfV = !isH ? prevSide : side;
    var nextIfH = isH ? nextSide : side;
    var nextIfV = !isH ? nextSide : side;
    return ('M' + makePoint(prevIfV, prevIfH, true, side) + T + makeValue(nextSide, true, side) + 'L' + makePoint(nextIfV, nextIfH) + T + makeValue(prevSide) + 'Z').replace(/NaN/g, '0');
  };

  return Object.fromEntries(allSides.map(function (side) {
    return [side, makeMaskPath(side)];
  }));
}